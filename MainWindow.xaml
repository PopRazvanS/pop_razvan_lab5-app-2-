<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:pop_razvan_lab5"
        xmlns:AutoLotModel="clr-namespace:AutoLotModel;assembly=AutoLotModel" x:Class="pop_razvan_lab5.MainWindow"
        mc:Ignorable="d"
        Title="MainWindow" Height="458.427" Width="1202.809" Loaded="Window_Loaded">
    <Window.Resources>
        <CollectionViewSource x:Key="customerViewSource" d:DesignSource="{d:DesignInstance {x:Type AutoLotModel:Customer}, CreateList=True}"/>
        <CollectionViewSource x:Key="inventoryViewSource" d:DesignSource="{d:DesignInstance {x:Type AutoLotModel:Inventory}, CreateList=True}"/>
        <CollectionViewSource x:Key="customerOrdersViewSource" Source="{Binding Orders, Source={StaticResource customerViewSource}}"/>
        <ControlTemplate x:Key="validationTemplate">
            <DockPanel>
                <TextBlock Foreground="Red" FontSize="20">!</TextBlock>
                <AdornedElementPlaceholder/>
            </DockPanel>
        </ControlTemplate>
        <Style x:Key="textBoxInError" TargetType="{x:Type TextBox}">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
 Value="{Binding RelativeSource={x:Static RelativeSource.Self},
 Path=(Validation.Errors)/ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid RenderTransformOrigin="0.487,0.519" Margin="0,0,5.222,-45.889">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="259*"/>
            <ColumnDefinition Width="166*"/>
            <ColumnDefinition Width="621*"/>
            <ColumnDefinition Width="147*"/>
        </Grid.ColumnDefinitions>
        <TabControl x:Name="tbCtrlAutoLot" HorizontalAlignment="Left" Margin="41.111,48,0,0" VerticalAlignment="Top" Height="334" Width="697" Grid.Column="2" Grid.ColumnSpan="2">
            <TabItem Header="Customers">
                <Grid Background="#FFE5E5E5" DataContext="{StaticResource customerViewSource}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="101*"/>
                        <ColumnDefinition Width="593*"/>
                    </Grid.ColumnDefinitions>
                    <DataGrid x:Name="customerDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" Margin="139.023,10,62.223,195.222" RowDetailsVisibilityMode="VisibleWhenSelected" Grid.Column="1">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="custIdColumn" Binding="{Binding CustId}" Header="Cust Id" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="firstNameColumn" Binding="{Binding FirstName}" Header="First Name" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="lastNameColumn" Binding="{Binding LastName}" Header="Last Name" Width="SizeToHeader"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Grid x:Name="grid1" HorizontalAlignment="Left" Margin="139.023,171,0,0" VerticalAlignment="Top" Grid.Column="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0.272"/>
                            <ColumnDefinition Width="75.283"/>
                            <ColumnDefinition Width="26.195"/>
                            <ColumnDefinition Width="97.36"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Label Content="Cust Id:" Grid.Column="1" HorizontalAlignment="Left" Margin="2.556,3,0,3" Grid.Row="0" VerticalAlignment="Center" IsEnabled="False"/>
                        <TextBox x:Name="custIdTextBox" Grid.Column="2" HorizontalAlignment="Left" Height="24" Margin="3.444,4,0,0" Grid.Row="0" Text="{Binding CustId, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Top" Width="120" Grid.ColumnSpan="2"/>
                        <Label Content="First Name:" Grid.Column="1" HorizontalAlignment="Left" Margin="2.556,3,0,3" Grid.Row="1" VerticalAlignment="Center"/>
                        <TextBox x:Name="firstNameTextBox" Grid.Column="2" HorizontalAlignment="Left" Height="23" Margin="1.444,3,0,6" Grid.Row="1" Text="{Binding FirstName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" RenderTransformOrigin="0.5,0.5" Grid.ColumnSpan="2" Validation.ErrorTemplate="{StaticResource validationTemplate}"
Style="{StaticResource textBoxInError}">
                            <TextBox.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform Angle="0.844"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </TextBox.RenderTransform>
                        </TextBox>
                        <Label Content="Last Name:" Grid.Column="1" HorizontalAlignment="Left" Margin="2.556,3,0,3" Grid.Row="2" VerticalAlignment="Center"/>
                        <TextBox x:Name="lastNameTextBox" Grid.Column="2" HorizontalAlignment="Left" Height="24" Margin="3.444,4,0,4" Grid.Row="2" Text="{Binding LastName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" Grid.ColumnSpan="2" Validation.ErrorTemplate="{StaticResource validationTemplate}"
Style="{StaticResource textBoxInError}"/>
                    </Grid>
                    <Button Content="Previous" HorizontalAlignment="Left" Margin="139.023,121,0,0" VerticalAlignment="Top" Width="75" RenderTransformOrigin="-0.156,0.63" Grid.Column="1" Click="btnPrevious_Click"/>
                    <Button Content="Next" HorizontalAlignment="Left" Margin="456.023,126,0,0" VerticalAlignment="Top" Width="75" RenderTransformOrigin="-0.842,-0.393" Grid.Column="1" Click="btnNext_Click"/>
                </Grid>
            </TabItem>
            <TabItem Header="Inventory">
                <Grid Background="#FFE5E5E5" DataContext="{StaticResource inventoryViewSource}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="7*"/>
                        <ColumnDefinition Width="24*"/>
                        <ColumnDefinition Width="21*"/>
                        <ColumnDefinition Width="642*"/>
                    </Grid.ColumnDefinitions>
                    <DataGrid x:Name="inventoryDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" Margin="218.439,10,46.222,192.222" RowDetailsVisibilityMode="VisibleWhenSelected" Grid.Column="3">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="carIdColumn" Binding="{Binding CarId}" Header="Car Id" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="colorColumn" Binding="{Binding Color}" Header="Color" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="makeColumn" Binding="{Binding Make}" Header="Make" Width="SizeToHeader"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Grid x:Name="grid2" HorizontalAlignment="Left" Margin="218.439,174,0,0" VerticalAlignment="Top" Grid.Column="3">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Label Content="Car Id:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="0" VerticalAlignment="Center" IsEnabled="False"/>
                        <TextBox x:Name="carIdTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="0" Text="{Binding CarId, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                        <Label Content="Color:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="1" VerticalAlignment="Center"/>
                        <TextBox x:Name="colorTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="1" Text="{Binding Color, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                        <Label Content="Make:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="2" VerticalAlignment="Center"/>
                        <TextBox x:Name="makeTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="2" Text="{Binding Make, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                    </Grid>
                    <Button Content="Previous" HorizontalAlignment="Left" Margin="218.439,119,0,0" VerticalAlignment="Top" Width="75" RenderTransformOrigin="0.169,0.251" Click="btn1Previous_Click" Grid.Column="3"/>
                    <Button Content="Next" HorizontalAlignment="Left" Margin="520.439,124,0,0" VerticalAlignment="Top" Width="75" RenderTransformOrigin="0.141,0.081" Click="btn1Next_Click" Grid.Column="3"/>
                </Grid>
            </TabItem>
            <TabItem Header="Orders">
                <Grid Background="#FFE5E5E5" Margin="-32,2,0.111,0.222" DataContext="{StaticResource customerOrdersViewSource}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="28*"/>
                        <ColumnDefinition Width="15*"/>
                        <ColumnDefinition Width="109*"/>
                        <ColumnDefinition Width="94*"/>
                        <ColumnDefinition Width="388*"/>
                        <ColumnDefinition Width="50*"/>
                    </Grid.ColumnDefinitions>
                    <ComboBox x:Name="cmbCustomers" HorizontalAlignment="Left" Margin="22.556,63,0,0" VerticalAlignment="Top" Width="120" Grid.Column="3" Grid.ColumnSpan="2" SelectedValue="{Binding
ElementName=ordersDataGrid,Path=SelectedItem.CustId,Mode=OneWay}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock>
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0} {1}">
                                            <Binding Path="FirstName"/>
                                            <Binding Path="LastName"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>

                    <ComboBox x:Name="cmbInventory" Grid.Column="4" HorizontalAlignment="Left" Margin="267.778,63,0,0" VerticalAlignment="Top" Width="103" SelectedValue="{Binding
ElementName=ordersDataGrid,Path=SelectedItem.CarId,Mode=OneWay}" Height="22">

                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock>
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0} - {1}">
                                            <Binding Path="Make"/>
                                            <Binding Path="Color"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <Label Content="Customers" Grid.Column="3" HorizontalAlignment="Left" Margin="47.556,32,0,0" VerticalAlignment="Top" Grid.ColumnSpan="2"/>
                    <Label Content="Inventory" Grid.Column="4" HorizontalAlignment="Left" Margin="310.778,32,0,0" VerticalAlignment="Top"/>
                    <DataGrid x:Name="ordersDataGrid" AutoGenerateColumns="False"
EnableRowVirtualization="True" ItemsSource="{Binding}"
RowDetailsVisibilityMode="VisibleWhenSelected" IsSynchronizedWithCurrentItem="True" Margin="0,0,0.444,0">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="FirstNameColumn" Binding="{Binding FirstName}"
Header="First Name" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="LastNameColumn" Binding="{Binding LastName}"
Header="Last Name" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="MakeColumn" Binding="{Binding Make}"
Header="Make" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="ColorColumn" Binding="{Binding Color}"
Header="Color" Width="SizeToHeader"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </TabItem>
            <DataGrid Height="100" Width="100"/>
        </TabControl>
        <GroupBox x:Name="gbOperations" Button.Click="gbOperations_Click" Header="GroupBox" HorizontalAlignment="Left" Height="115" Margin="139,77,0,0" VerticalAlignment="Top" Width="182" Grid.ColumnSpan="2" Foreground="#FFD32626" BorderBrush="#FF1F83BF">
            <StackPanel HorizontalAlignment="Left" Height="60" Margin="43,0,0,0" VerticalAlignment="Top" Width="74">
                <Button Content="New" HorizontalAlignment="Left" VerticalAlignment="Top" Width="75" RenderTransformOrigin="0.382,-0.279" Click="btnAdd_Click"/>
                <Button Content="Edit" HorizontalAlignment="Left" VerticalAlignment="Top" Width="75" RenderTransformOrigin="0.048,-0.736" Click="btnEditO_Click"/>
                <Button Content="Delete" HorizontalAlignment="Left" VerticalAlignment="Top" Width="75" RenderTransformOrigin="-0.096,-0.785" Click="btnDeleteO_Click"/>
            </StackPanel>
        </GroupBox>
        <GroupBox x:Name="gbActions" Header="GroupBox" HorizontalAlignment="Left" Height="109" Margin="139,273,0,0" VerticalAlignment="Top" Width="166" Grid.ColumnSpan="2" Foreground="#FFF60D0D" BorderBrush="#FF059BF6">
            <StackPanel HorizontalAlignment="Left" Height="42" Margin="35,10,0,0" VerticalAlignment="Top" Width="77">
                <Button Content="Save" HorizontalAlignment="Left" VerticalAlignment="Top" Width="75" RenderTransformOrigin="0.559,-0.64"  >
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="IsEnabled" Value="false" />
                            <Style.Triggers>
                                <!--Butonul Save va fi inactiv daca exista erori de validare -->
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding ElementName=lastNameTextBox,  Path=(Validation.HasError)}" Value="false" />
                                        <Condition Binding="{Binding ElementName=firstNameTextBox,  Path=(Validation.HasError)}" Value="false" />

                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="true" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button Content="Cancel" HorizontalAlignment="Left" VerticalAlignment="Top" Width="75" RenderTransformOrigin="-0.382,0.717"/>
            </StackPanel>
        </GroupBox>

    </Grid>
</Window>
